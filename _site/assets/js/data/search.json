[
  
  {
    "title": "[Jekyll] jekyll 로컬서버 실행하기",
    "url": "/posts/jekyll-%EB%A1%9C%EC%BB%AC%EC%84%9C%EB%B2%84-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0/",
    "categories": "Junk, Jekyll",
    "tags": "jekyll",
    "date": "2024-09-27 00:00:00 +0900",
    





    
    "snippet": "📌 jekyll 로컬서버 실행하기  내가 작업하다가 계속 명령어 까먹어서 기록중…  명령어 기억하는건 너무너무 힘들다✅ Jekyll 설치가 먼저 되어있어야함jekyll -v  jekyll가 정상적으로 설치되어있다면 위 이미지처럼 뜰 것!✅ Jekyll가 설치되어있지 않다면 아래 명령어로 설치!gem install jekyll bundler✅ Bundl...",
    "content": "📌 jekyll 로컬서버 실행하기  내가 작업하다가 계속 명령어 까먹어서 기록중…  명령어 기억하는건 너무너무 힘들다✅ Jekyll 설치가 먼저 되어있어야함jekyll -v  jekyll가 정상적으로 설치되어있다면 위 이미지처럼 뜰 것!✅ Jekyll가 설치되어있지 않다면 아래 명령어로 설치!gem install jekyll bundler✅ Bundler로 의존성 설치하기Gemfile이 있는 경우 Bundler를 사용해서 필요한 gem을 설치bundle install근데 나는 위 명령어를 치니깐 아래와 같은 에러 발생!Could not find compatible versionsBecause every version of jekyll-theme-chirpy depends on Ruby ~&gt; 3.1  and Gemfile depends on jekyll-theme-chirpy &gt;= 0,  Ruby ~&gt; 3.1 is required.So, because current Ruby version is = 3.0.2,  version solving has failed.Chirpy 테마랑 내 로컬에 설치되어있는 ruby 버전이 맞지 않아 생기는 에러일단 ruby 버전을 먼저 확인해본다ruby -v  내 노트북은 3.0.2 버전 근데 Chirpy 테마가 요구하는 버전은 3.1이상이여야함 ruby 버전을 업데이트하기 위해서 아래 명령어를 실행 후 다시 Bundler 및 Jekyll 재설치를 해야함!brew install rbenvrbenv install 3.1.0rbenv global 3.1.0gem install bundler jekyllbundle install✅ 마지막으로 로컬서버 실행하기bundle exec jekyll serve --trace사실 오류들은 구글링 혹은 chatGPT가 친절하게 알려줘서 조금만 검색해보면 다 알수있다 근데 md 파일 작성하는거 엄청 빡세네 GUI의 소중함을 다시한번 깨닫는 날…"
  },
  
  {
    "title": "Git author 변경하기",
    "url": "/posts/git-author-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0/",
    "categories": "Junk, Git",
    "tags": "Git",
    "date": "2024-09-27 00:00:00 +0900",
    





    
    "snippet": "Git author 변경하기  만약 git log의 3번째 커밋의 author를 변경하고 싶은 경우 ?$ git rebase -i HEAD~3 # 3번째 커밋을 변경하고자함# vi 화면이 뜨면# pick -&gt; e 로 변경하고 :wq로 저장 &amp; 종료$ git commit --amend --author=\"{username} &lt;{usere...",
    "content": "Git author 변경하기  만약 git log의 3번째 커밋의 author를 변경하고 싶은 경우 ?$ git rebase -i HEAD~3 # 3번째 커밋을 변경하고자함# vi 화면이 뜨면# pick -&gt; e 로 변경하고 :wq로 저장 &amp; 종료$ git commit --amend --author=\"{username} &lt;{useremail}&gt;\"# 또 vi 화면이 뜸# 이때 변경 된 author 내용 확인 후 :wq $ git rebase --conitnue $ git push -f origin main  후,, 현재 다니는 회사가 이런거에 너무 빡빡해서 너무 스트레스 !"
  },
  
  {
    "title": "카프카의 주요 개념 및 용어",
    "url": "/posts/%EC%B9%B4%ED%94%84%EC%B9%B4-%EA%B0%9C%EB%85%90-%EB%B0%8F-%EC%9A%A9%EC%96%B4/",
    "categories": "Junk, Kafka",
    "tags": "kafka",
    "date": "2024-09-05 00:00:00 +0900",
    





    
    "snippet": "주요 개념 및 용어  KafkaCluster          카프카의 브로커(broker)들의 모임 =&gt; 확장성과 고가용성을 위해서 borker들이 클러스터로 구성      보통 3개 이상으로 구성하는 것을 권장한다고 한다      설정은 어떻게..? 하는거지? =&gt; 찾아보니 설정 파일로 조정하는게 아니라 실제로 추가하거나 제거하는 작업을 ...",
    "content": "주요 개념 및 용어  KafkaCluster          카프카의 브로커(broker)들의 모임 =&gt; 확장성과 고가용성을 위해서 borker들이 클러스터로 구성      보통 3개 이상으로 구성하는 것을 권장한다고 한다      설정은 어떻게..? 하는거지? =&gt; 찾아보니 설정 파일로 조정하는게 아니라 실제로 추가하거나 제거하는 작업을 해야한다고 함! 어렵구먼        Broker          각각의 카프카 서버        Zookeeper          카프카 클러스터 정보 및 분산처리 관리 등 메타데이터 저장      곧 카프카 클러스터랑 통합 예정이라는데 언제쯤..?        Producer          메세지를 발행하여 생산하는 주체      쉽게 말해 카프카에 메세지를 보내기        Consumer          메세지를 구독하여 소비하는 주체      쉽게 말해 카프카에서 메세지를 꺼내 읽기      카프카의 상세 구조 : 토픽, 파티션, 오프셋  Topic          메세지를 구분하는 단위      폴더와 유사하다고 생각하면 쉽다        Partition          메세지를 저장하는 물리적인 파일      폴더안에 들어있는 파일들이라고 생각하면 쉽다      한개의 토픽은 한개의 파티션으로 구성되어 있음      파티션은 메세지 추가만 가능함        Offset          파티션 내 각 메세지가 저장되어있는 상대적인 위치      프로듀서가 넣는 메세지는 파티션의 맨 뒤에 추가 된다 =&gt; 왜냐면 카프카는 Queue형태니깐      컨슈머는 offset 기준으로 순서대로 메세지를 읽음      파티션의 메시지 파일은 처리 후에도 계속 저장되어 있어 설정에 따라 일정시간 뒤 삭제됨                  설정은 어디서..하는거지?                      Replication          파티션의 복제      Leader partition과 Follower partition은 파티션의 데이터 복제 및 고가용성을 위해 사용      ISR(In-Sync Replicas) : 리더와 동기화된 복제본들의 집합      데이터의 일관성을 보장하고 장애 발생 시 데이터 손실을 최소화하는데 중요한 역할 =&gt; 가용성 보장!      Zookeeper  분산 코디네이션 서비스          분산 시스템에서 시스템 간의 정보공유, 상태체크, 서버들 간의 동기화를 위한 락 등을 처리해주는 서비스        카프카에서 주키퍼의 역할은?          서버의 상태를 감지하기 위해 사용됨      새로운 토픽이 생성되었을 때 토픽의 생성과 소비에 대한 상태를 저장      Broker  Message Broker          publisher가 생산한 메시지를 메시지 큐에 저장하고, 저장된 데이터를 consumer가 가져갈 수 있게 하는 역할      보통 서로 다른 시스템 사이에서 데이터를 비동기 형태로 처리      대표적인 예) RabbitMQ, RedisQueue 등        Event Broker          기본적으로 Message Broker의 기능들을 가지고 있음      publisher가 생산한 이벤트를 저장하여 후에 consumer가 특정 시점부터 이벤트를 다시 소비할 수 있음      장애가 일어났을 때 장애가 일어난 시점부터 재처리 가능 =&gt; 어떤 원리로 가능하지..?      많은 양의 실시간 스트림 데이터를 효과적으로 처리할 수 있음      대표적인 예) Kafka, 키네시스 등      Producer  메세지를 발행하여 생산하는 주체  프로듀서는 메시지 전송 시 토픽을 지정할 수 있고, 파티션 번호를 지정할 수 있음          파티션 번호를 지정했다면 동일한 파티션 번호에 메세지가 저장됨      파티션 번호가 없다면? 라운드로빈 방식으로 적절하게 분배됨      ConsumerPartition  데이터의 병렬처리 및 분산 저장을 가능하게 해 카프카의 확장성과 성능을 높일 수 있음  파티션이 많으면 많을수록 더 많은 데이터를 처리할 수 있고, 더 많은 Consumer와 Producer를 지원할 수 있음          하지만 너무 무분별하게 늘리면 안됨! 왜냐면 파티션은 한번 늘어나면 다시 줄이기 쉽지 않기 때문      그 이유는 데이터 분산 및 일관성 유지가 어렵기 때문,,,      파티션을 줄이기보다는 새로운 토픽을 생성 혹은 데이터 마이그레이션 혹은 클러스터 모니터링을 통해서 파티션을 줄이는 동안 충분한 모니터링이 필요함!      출처  https://ifuwanna.tistory.com/487  https://medium.com/@0joon/10%EB%B6%84%EC%95%88%EC%97%90-%EC%95%8C%EC%95%84%EB%B3%B4%EB%8A%94-kafka-bed877e7a3bc"
  },
  
  {
    "title": "카프카란 무엇일까?",
    "url": "/posts/%EC%B9%B4%ED%94%84%EC%B9%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C/",
    "categories": "Junk, Kafka",
    "tags": "kafka",
    "date": "2024-09-03 00:00:00 +0900",
    





    
    "snippet": "  실무에서 아파치카프카를 사용하여 대량의 이벤트를 처리하고 있다. 대~강 대용량 데이터를 처리하기 위한 큐 정도로만 알고 있었는데 실제로 사용해보니 개념을 정확하게 알아야 카프카를 100% 활용할 수 있을거라고 생각했다.카프카란 ?  정식 명칭은 아파치카프카(Apache Kafka)  분산형 스트리밍 플랫폼  대량의 데이터를 안정적이고 실시간으로 처...",
    "content": "  실무에서 아파치카프카를 사용하여 대량의 이벤트를 처리하고 있다. 대~강 대용량 데이터를 처리하기 위한 큐 정도로만 알고 있었는데 실제로 사용해보니 개념을 정확하게 알아야 카프카를 100% 활용할 수 있을거라고 생각했다.카프카란 ?  정식 명칭은 아파치카프카(Apache Kafka)  분산형 스트리밍 플랫폼  대량의 데이터를 안정적이고 실시간으로 처리할 수 있도록 설계  한마디로 성능과 기능이 좋은 큐(Queue)발행-구독 모델  Publisher : 발행자  broker : 카프카 =&gt; KafkaCluster  Consumer : 구독자  데이터를 발행자가 직접 구독자에게 보내는 형태가 아니고  발행자는 데이터를 구독시스템에 보내고 보낸 데이터를 저장하는 중계역할을 카프카가 하게 되고  구독자는 저장된 데이터를 구독(처리)하는 형태카프카의 주요 특징 및 용도  분산 시스템  확장성  내결함성  이벤트 브로커분산 시스템확장성내결함성이벤트 브로커"
  },
  
  {
    "title": "Git 연동하기",
    "url": "/posts/git-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0/",
    "categories": "Junk, Git",
    "tags": "git",
    "date": "2024-09-02 00:00:00 +0900",
    





    
    "snippet": "Git 연동하기  git clone 받은 후  clone 받은 디렉토리 이동 후 아래 명령어 실행    $ git init$ git add README.md$ git commit -m \"first commit\"$ git remote add origin [GIT URL]$ git push -u origin main        로컬환경에 git이 설치되...",
    "content": "Git 연동하기  git clone 받은 후  clone 받은 디렉토리 이동 후 아래 명령어 실행    $ git init$ git add README.md$ git commit -m \"first commit\"$ git remote add origin [GIT URL]$ git push -u origin main        로컬환경에 git이 설치되어있는 경우에 위 명령어 실행 가능"
  },
  
  {
    "title": "Git remote url 확인하기",
    "url": "/posts/git-remote-url-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/",
    "categories": "Junk, Git",
    "tags": "git",
    "date": "2024-09-02 00:00:00 +0900",
    





    
    "snippet": "Git remote url 확인하기$ git remote -v",
    "content": "Git remote url 확인하기$ git remote -v"
  },
  
  {
    "title": "Git .gitignore 적용하기",
    "url": "/posts/git-gitignore-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/",
    "categories": "Junk, Git",
    "tags": "git",
    "date": "2024-09-02 00:00:00 +0900",
    





    
    "snippet": "Git .gitignore 적용하기  root 디렉토리에 .gitignore 파일 생성 후 형상관리가 되면 안되는 파일들 기입# git cache 삭제$ git rm -r --cached .$ git add .$ git commit -m \"cache clear\"  또는 아래와 같이 git 추적금지를 시킬 수 있음git update-index --ass...",
    "content": "Git .gitignore 적용하기  root 디렉토리에 .gitignore 파일 생성 후 형상관리가 되면 안되는 파일들 기입# git cache 삭제$ git rm -r --cached .$ git add .$ git commit -m \"cache clear\"  또는 아래와 같이 git 추적금지를 시킬 수 있음git update-index --assume-unchangedgit update-index --no-assume-unchangedgit rm --cached filenamegit rm --cached .htaccessgit rm -r --cached .git add .htaccessgit commit -m 'clear git cache'"
  },
  
  {
    "title": "Customize the Favicon",
    "url": "/posts/customize-the-favicon/",
    "categories": "Blogging, Tutorial",
    "tags": "favicon",
    "date": "2019-08-11 01:34:00 +0900",
    





    
    "snippet": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons...",
    "content": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.Generate the faviconPrepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image to upload your image file.In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button Generate your Favicons and HTML code to generate the favicon.Download &amp; ReplaceDownload the generated package, unzip and delete the following two from the extracted files:  browserconfig.xml  site.webmanifestAnd then copy the remaining image files (.PNG and .ICO) to cover the original files in the directory assets/img/favicons/ of your Jekyll site. If your Jekyll site doesn’t have this directory yet, just create one.The following table will help you understand the changes to the favicon files:            File(s)      From Online Tool      From Chirpy                  *.PNG      ✓      ✗              *.ICO      ✓      ✗        ✓ means keep, ✗ means delete.The next time you build the site, the favicon will be replaced with a customized edition."
  },
  
  {
    "title": "Getting Started",
    "url": "/posts/getting-started/",
    "categories": "Blogging, Tutorial",
    "tags": "getting started",
    "date": "2019-08-09 21:55:00 +0900",
    





    
    "snippet": "Creating a Site RepositoryWhen creating your site repository, you have two options depending on your needs:Option 1. Using the Starter (Recommended)This approach simplifies upgrades, isolates unnec...",
    "content": "Creating a Site RepositoryWhen creating your site repository, you have two options depending on your needs:Option 1. Using the Starter (Recommended)This approach simplifies upgrades, isolates unnecessary files, and is perfect for users who want to focus on writing with minimal configuration.  Sign in to GitHub and navigate to the starter.  Click the Use this template button and then select Create a new repository.  Name the new repository &lt;username&gt;.github.io, replacing username with your lowercase GitHub username.Option 2. Forking the ThemeThis approach is convenient for modifying features or UI design, but presents challenges during upgrades. So don’t try this unless you are familiar with Jekyll and plan to heavily modify this theme.  Sign in to GitHub.  Fork the theme repository.  Name the new repository &lt;username&gt;.github.io, replacing username with your lowercase GitHub username.Setting up the EnvironmentOnce your repository is created, it’s time to set up your development environment. There are two primary methods:Using Dev Containers (Recommended for Windows)Dev Containers offer an isolated environment using Docker, which prevents conflicts with your system and ensures all dependencies are managed within the container.Steps:  Install Docker:          On Windows/macOS, install Docker Desktop.      On Linux, install Docker Engine.        Install VS Code and the Dev Containers extension.  Clone your repository:          For Docker Desktop: Start VS Code and clone your repo in a container volume.      For Docker Engine: Clone your repo locally, then open it in a container via VS Code.        Wait for the Dev Containers setup to complete.Setting up Natively (Recommended for Unix-like OS)For Unix-like systems, you can set up the environment natively for optimal performance, though you can also use Dev Containers as an alternative.Steps:  Follow the Jekyll installation guide to install Jekyll and ensure Git is installed.  Clone your repository to your local machine.  If you forked the theme, install Node.js and run bash tools/init.sh in the root directory to initialize the repository.  Run command bundle in the root of your repository to install the dependencies.UsageStart the Jekyll ServerTo run the site locally, use the following command:$ bundle exec jekyll s  If you are using Dev Containers, you must run that command in the VS Code Terminal.After a few seconds, the local server will be available at http://127.0.0.1:4000.ConfigurationUpdate the variables in _config.yml as needed. Some typical options include:  url  avatar  timezone  langSocial Contact OptionsSocial contact options are displayed at the bottom of the sidebar. You can enable or disable specific contacts in the _data/contact.yml file.Customizing the StylesheetTo customize the stylesheet, copy the theme’s assets/css/jekyll-theme-chirpy.scss file to the same path in your Jekyll site, and add your custom styles at the end of the file.Starting with version 6.2.0, if you want to overwrite the SASS variables defined in _sass/addon/variables.scss, copy the main SASS file _sass/main.scss to the _sass directory in your site’s source, then create a new file _sass/variables-hook.scss and assign your new values there.Customizing Static AssetsStatic assets configuration was introduced in version 5.1.0. The CDN of the static assets is defined in _data/origin/cors.yml. You can replace some of them based on the network conditions in the region where your website is published.If you prefer to self-host the static assets, refer to the chirpy-static-assets repository.DeploymentBefore deploying, check the _config.yml file and ensure the url is configured correctly. If you prefer a project site and don’t use a custom domain, or if you want to visit your website with a base URL on a web server other than GitHub Pages, remember to set the baseurl to your project name, starting with a slash, e.g., /project-name.Now you can choose ONE of the following methods to deploy your Jekyll site.Deploy Using Github ActionsPrepare the following:  If you’re on the GitHub Free plan, keep your site repository public.      If you have committed Gemfile.lock to the repository, and your local machine is not running Linux, update the platform list of the lock file:    $ bundle lock --add-platform x86_64-linux      Next, configure the Pages service:      Go to your repository on GitHub. Select the Settings tab, then click Pages in the left navigation bar. In the Source section (under Build and deployment), select GitHub Actions from the dropdown menu.        Push any commits to GitHub to trigger the Actions workflow. In the Actions tab of your repository, you should see the workflow Build and Deploy running. Once the build is complete and successful, the site will be deployed automatically.  You can now visit the URL provided by GitHub to access your site.Manual Build and DeploymentFor self-hosted servers, you will need to build the site on your local machine and then upload the site files to the server.Navigate to the root of the source project, and build your site with the following command:$ JEKYLL_ENV=production bundle exec jekyll bUnless you specified the output path, the generated site files will be placed in the _site folder of the project’s root directory. Upload these files to your target server."
  },
  
  {
    "title": "Writing a New Post",
    "url": "/posts/write-a-new-post/",
    "categories": "Blogging, Tutorial",
    "tags": "writing",
    "date": "2019-08-08 15:10:00 +0900",
    





    
    "snippet": "This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.Naming and P...",
    "content": "This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG]     # TAG names should always be lowercase---  The posts’ layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.Timezone of DateTo accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post’s timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:---categories: [Animal, Insect]tags: [bee]---Author InformationThe author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:Adding author information in _data/authors.yml (If your website doesn’t have this file, don’t hesitate to create one).&lt;author_id&gt;:  name: &lt;full name&gt;  twitter: &lt;twitter_of_author&gt;  url: &lt;homepage_of_author&gt;And then use author to specify a single entry or authors to specify multiple entries:---author: &lt;author_id&gt;                     # for single entry# orauthors: [&lt;author1_id&gt;, &lt;author2_id&gt;]   # for multiple entries---Having said that, the key author can also identify multiple entries.  The benefit of reading the author information from the file _data/authors.yml is that the page will have the meta tag twitter:creator, which enriches the Twitter Cards and is good for SEO.Post DescriptionBy default, the first words of the post are used to display on the home page for a list of posts, in the Further Reading section, and in the XML of the RSS feed. If you don’t want to display the auto-generated description for the post, you can customize it using the description field in the Front Matter as follows:---description: Short summary of the post.---Additionally, the description text will also be displayed under the post title on the post’s page.Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post’s Front Matter:---toc: false---CommentsThe global switch of comments is defined by variable comments.active in the file _config.yml. After selecting a comment system for this variable, comments will be turned on for all posts.If you want to close the comment for a specific post, add the following to the Front Matter of the post:---comments: false---MediaWe refer to images, audio and video as media resources in Chirpy.URL PrefixFrom time to time we have to define duplicate URL prefixes for multiple resources in a post, which is a boring task that you can avoid by setting two parameters.      If you are using a CDN to host media files, you can specify the cdn in _config.yml. The URLs of media resources for site avatar and posts are then prefixed with the CDN domain name.    cdn: https://cdn.com            To specify the resource path prefix for the current post/page range, set media_subpath in the front matter of the post:    ---media_subpath: /path/to/media/---      The option site.cdn and page.media_subpath can be used individually or in combination to flexibly compose the final resource URL: [site.cdn/][page.media_subpath/]file.extImagesCaptionAdd italics to the next line of an image, then it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_SizeTo prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image.![Desktop View](/assets/img/sample/mockup.png){: width=\"700\" height=\"400\" }  For an SVG, you have to at least specify its width, otherwise it won’t be rendered.Starting from Chirpy v5.0.0, height and width support abbreviations (height → h, width → w). The following example has the same effect as the above:![Desktop View](/assets/img/sample/mockup.png){: w=\"700\" h=\"400\" }PositionBy default, the image is centered, but you can specify the position by using one of the classes normal, left, and right.  Once the position is specified, the image caption should not be added.      Normal position    Image will be left aligned in below sample:    ![Desktop View](/assets/img/sample/mockup.png){: .normal }            Float to the left    ![Desktop View](/assets/img/sample/mockup.png){: .left }            Float to the right    ![Desktop View](/assets/img/sample/mockup.png){: .right }      Dark/Light modeYou can make images follow theme preferences in dark/light mode. This requires you to prepare two images, one for dark mode and one for light mode, and then assign them a specific class (dark or light):![Light mode only](/path/to/light-mode.png){: .light }![Dark mode only](/path/to/dark-mode.png){: .dark }ShadowThe screenshots of the program window can be considered to show the shadow effect:![Desktop View](/assets/img/sample/mockup.png){: .shadow }Preview ImageIf you want to add an image at the top of the post, please provide an image with a resolution of 1200 x 630. Please note that if the image aspect ratio does not meet 1.91 : 1, the image will be scaled and cropped.Knowing these prerequisites, you can start setting the image’s attribute:---image:  path: /path/to/image  alt: image alternative text---Note that the media_subpath can also be passed to the preview image, that is, when it has been set, the attribute path only needs the image file name.For simple use, you can also just use image to define the path.---image: /path/to/image---LQIPFor preview images:---image:  lqip: /path/to/lqip-file # or base64 URI---  You can observe LQIP in the preview image of post \"Text and Typography\".For normal images:![Image description](/path/to/image){: lqip=\"/path/to/lqip-file\" }VideoSocial Media PlatformYou can embed videos from social media platforms with the following syntax:{% include embed/{Platform}.html id='{ID}' %}Where Platform is the lowercase of the platform name, and ID is the video ID.The following table shows how to get the two parameters we need in a given video URL, and you can also know the currently supported video platforms.            Video URL      Platform      ID                  https://www.youtube.com/watch?v=H-B46URT4mg      youtube      H-B46URT4mg              https://www.twitch.tv/videos/1634779211      twitch      1634779211              https://www.bilibili.com/video/BV1Q44y1B7Wf      bilibili      BV1Q44y1B7Wf      Video FilesIf you want to embed a video file directly, use the following syntax:{% include embed/video.html src='{URL}' %}Where URL is a URL to a video file e.g. /path/to/sample/video.mp4.You can also specify additional attributes for the embedded video file. Here is a full list of attributes allowed.  poster='/path/to/poster.png' — poster image for a video that is shown while video is downloading  title='Text' — title for a video that appears below the video and looks same as for images  autoplay=true — video automatically begins to play back as soon as it can  loop=true — automatically seek back to the start upon reaching the end of the video  muted=true — audio will be initially silenced  types — specify the extensions of additional video formats separated by |. Ensure these files exist in the same directory as your primary video file.Consider an example using all of the above:{%  include embed/video.html  src='/path/to/video.mp4'  types='ogg|mov'  poster='poster.png'  title='Demo video'  autoplay=true  loop=true  muted=true%}AudiosIf you want to embed an audio file directly, use the following syntax:{% include embed/audio.html src='{URL}' %}Where URL is a URL to an audio file e.g. /path/to/audio.mp3.You can also specify additional attributes for the embedded audio file. Here is a full list of attributes allowed.  title='Text' — title for an audio that appears below the audio and looks same as for images  types — specify the extensions of additional audio formats separated by |. Ensure these files exist in the same directory as your primary audio file.Consider an example using all of the above:{%  include embed/audio.html  src='/path/to/audio.mp3'  types='ogg|wav|aac'  title='Demo audio'%}Pinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---PromptsThere are several types of prompts: tip, info, warning, and danger. They can be generated by adding the class prompt-{type} to the blockquote. For example, define a prompt of type info as follows:&gt; Example line for prompt.{: .prompt-info }SyntaxInline Code`inline code part`Filepath Highlight`/path/to/a/file.extend`{: .filepath}Code BlockMarkdown symbols ``` can easily create a code block as follows:```This is a plaintext code snippet.```Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:```yamlkey: value```  The Jekyll tag {% highlight %} is not compatible with this theme.Line NumberBy default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:```shellecho 'No more line numbers!'```{: .nolineno }Specifying the FilenameYou may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:```shell# content```{: file=\"path/to/file\" }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains 'Pack' %}  This product's title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.MathematicsWe use MathJax to generate mathematics. For website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:---math: true---After enabling the mathematical feature, you can add math equations with the following syntax:  Block math should be added with $$ math $$ with mandatory blank lines before and after $$          Inserting equation numbering should be added with $$\\begin{equation} math \\end{equation}$$      Referencing equation numbering should be done with \\label{eq:label_name} in the equation block and \\eqref{eq:label_name} inline with text (see example below)        Inline math (in lines) should be added with $$ math $$ without any blank line before or after $$  Inline math (in lists) should be added with \\$$ math $$&lt;!-- Block math, keep all blank lines --&gt;$$LaTeX_math_expression$$&lt;!-- Equation numbering, keep all blank lines  --&gt;$$\\begin{equation}  LaTeX_math_expression  \\label{eq:label_name}\\end{equation}$$Can be referenced as \\eqref{eq:label_name}.&lt;!-- Inline math in lines, NO blank lines --&gt;\"Lorem ipsum dolor sit amet, $$ LaTeX_math_expression $$ consectetur adipiscing elit.\"&lt;!-- Inline math in lists, escape the first `$` --&gt;1. \\$$ LaTeX_math_expression $$2. \\$$ LaTeX_math_expression $$3. \\$$ LaTeX_math_expression $$  Starting with v7.0.0, configuration options for MathJax have been moved to file assets/js/data/mathjax.js, and you can change the options as needed, such as adding extensions.If you are building the site via chirpy-starter, copy that file from the gem installation directory (check with command bundle info --path jekyll-theme-chirpy) to the same directory in your repository.MermaidMermaid is a great diagram generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts."
  },
  
  {
    "title": "Text and Typography",
    "url": "/posts/text-and-typography/",
    "categories": "Blogging, Demo",
    "tags": "typography",
    "date": "2019-08-08 12:33:00 +0900",
    





    
    "snippet": "HeadingsH1 — headingH2 — headingH3 — headingH4 — headingParagraphQuisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risu...",
    "content": "HeadingsH1 — headingH2 — headingH3 — headingH4 — headingParagraphQuisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risus, sit amet vulputate urna facilisis ac. Phasellus semper dui non purus ultrices sodales. Aliquam ante lorem, ornare a feugiat ac, finibus nec mauris. Vivamus ut tristique nisi. Sed vel leo vulputate, efficitur risus non, posuere mi. Nullam tincidunt bibendum rutrum. Proin commodo ornare sapien. Vivamus interdum diam sed sapien blandit, sit amet aliquam risus mattis. Nullam arcu turpis, mollis quis laoreet at, placerat id nibh. Suspendisse venenatis eros eros.ListsOrdered list  Firstly  Secondly  ThirdlyUnordered list  Chapter          Section                  Paragraph                    ToDo list  Job          Step 1      Step 2      Step 3      Description list  Sun  the star around which the earth orbits  Moon  the natural satellite of the earth, visible by reflected light from the sunBlock Quote  This line shows the block quote.Prompts  An example showing the tip type prompt.  An example showing the info type prompt.  An example showing the warning type prompt.  An example showing the danger type prompt.Tables            Company      Contact      Country                  Alfreds Futterkiste      Maria Anders      Germany              Island Trading      Helen Bennett      UK              Magazzini Alimentari Riuniti      Giovanni Rovelli      Italy      Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blocksCommonThis is a common code snippet, without syntax highlight and line number.Specific Languageif [ $? -ne 0 ]; then  echo \"The command was not successful.\";  #do the needful / exitfi;Specific filename@import  \"colors/light-typography\",  \"colors/dark-typography\";MathematicsThe mathematics powered by MathJax:\\[\\begin{equation}  \\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}  \\label{eq:series}\\end{equation}\\]We can reference the equation as \\eqref{eq:series}.When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Mermaid SVG gantt  title  Adding GANTT diagram functionality to mermaid  apple :a, 2017-07-20, 1w  banana :crit, b, 2017-07-23, 1d  cherry :active, c, after b a, 1dImagesDefault (with caption)Full screen width and center alignmentLeft alignedFloat to leftPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Float to rightPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Dark/Light mode &amp; ShadowThe image below will toggle dark/light mode based on theme preference, notice it has shadows.VideoReverse Footnote            The footnote source &#8617;&#xfe0e;              The 2nd footnote source &#8617;&#xfe0e;      "
  }
  
]

